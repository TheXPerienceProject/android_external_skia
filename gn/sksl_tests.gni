# Copyright 2020 Google LLC
#
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# Things are easiest for everyone if these source paths are absolute.
_tests = get_path_info("../tests", "abspath")

# Tests in sksl_fp_tests_sources will be compiled with --settings on.
sksl_fp_tests_sources = [
  "$_tests/sksl/errors/GrBadIn.fp",
  "$_tests/sksl/errors/GrBothExplicitReturnAndSkOutColor.fp",
  "$_tests/sksl/errors/GrCannotReturnWithSkOutColor.fp",
  "$_tests/sksl/errors/GrNoFragmentProcessorConstruction.fp",
  "$_tests/sksl/errors/GrNoFragmentProcessorExpressions.fp",
  "$_tests/sksl/errors/GrNoFragmentProcessorLocals.fp",
  "$_tests/sksl/errors/GrNoFragmentProcessorParams.fp",
  "$_tests/sksl/errors/GrNoFragmentProcessorReturn.fp",
  "$_tests/sksl/fp/GrConditionalInUniform.fp",
  "$_tests/sksl/fp/GrFunction.fp",
  "$_tests/sksl/fp/GrHelloWorld.fp",
  "$_tests/sksl/fp/GrInUniform.fp",
  "$_tests/sksl/fp/GrInUniformCType.fp",
  "$_tests/sksl/fp/GrInlinedFunction.fp",
  "$_tests/sksl/fp/GrKeyIn.fp",
  "$_tests/sksl/fp/GrNestedChildProcessors.fp",
  "$_tests/sksl/fp/GrNonInlinedInUniform.fp",
  "$_tests/sksl/fp/GrNullableChildProcessor.fp",
  "$_tests/sksl/fp/GrSectionClass.fp",
  "$_tests/sksl/fp/GrSectionConstructor.fp",
  "$_tests/sksl/fp/GrSectionConstructorParams.fp",
  "$_tests/sksl/fp/GrSectionCpp.fp",
  "$_tests/sksl/fp/GrSectionDumpInfo.fp",
  "$_tests/sksl/fp/GrSectionEmitCode.fp",
  "$_tests/sksl/fp/GrSectionFields.fp",
  "$_tests/sksl/fp/GrSectionHeader.fp",
  "$_tests/sksl/fp/GrSectionInitializers.fp",
  "$_tests/sksl/fp/GrSectionMake.fp",
  "$_tests/sksl/fp/GrSectionSetData.fp",
  "$_tests/sksl/fp/GrSectionTest.fp",
  "$_tests/sksl/fp/GrTrackedInUniform.fp",
  "$_tests/sksl/fp/GrUniform.fp",
  "$_tests/sksl/fp/GrUseExplicitReturn.fp",
]

# Tests in sksl_glsl_tests_sources will be compiled with --settings on.
sksl_glsl_tests_sources = [
  "$_tests/sksl/errors/ArgumentCountMismatch.sksl",
  "$_tests/sksl/errors/ArgumentMismatch.sksl",
  "$_tests/sksl/errors/ArgumentModifiers.sksl",
  "$_tests/sksl/errors/AssignmentTypeMismatch.sksl",
  "$_tests/sksl/errors/BadCaps.sksl",
  "$_tests/sksl/errors/BadIndex.sksl",
  "$_tests/sksl/errors/BadModifiers.sksl",
  "$_tests/sksl/errors/BinaryTypeCoercion.sksl",
  "$_tests/sksl/errors/BinaryTypeMismatch.sksl",
  "$_tests/sksl/errors/BitShiftFloat.sksl",
  "$_tests/sksl/errors/BitShiftFloatMatrix.sksl",
  "$_tests/sksl/errors/BitShiftFloatVector.sksl",
  "$_tests/sksl/errors/BreakOutsideLoop.sksl",
  "$_tests/sksl/errors/CallNonFunction.sksl",
  "$_tests/sksl/errors/CanExitWithoutReturningValue.sksl",
  "$_tests/sksl/errors/ConstructorArgumentCount.sksl",
  "$_tests/sksl/errors/ConstructorTypeMismatch.sksl",
  "$_tests/sksl/errors/ContinueOutsideLoop.sksl",
  "$_tests/sksl/errors/DivideByZero.sksl",
  "$_tests/sksl/errors/DoTypeMismatch.sksl",
  "$_tests/sksl/errors/DuplicateFunction.sksl",
  "$_tests/sksl/errors/DuplicateOutput.sksl",
  "$_tests/sksl/errors/DuplicateSymbol.sksl",
  "$_tests/sksl/errors/EnumValueMustBeConstInt.sksl",
  "$_tests/sksl/errors/ErrorsInDeadCode.sksl",
  "$_tests/sksl/errors/FieldAfterRuntimeArray.sksl",
  "$_tests/sksl/errors/ForTypeMismatch.sksl",
  "$_tests/sksl/errors/GenericArgumentMismatch.sksl",
  "$_tests/sksl/errors/IfTypeMismatch.sksl",
  "$_tests/sksl/errors/InterfaceBlockScope.sksl",
  "$_tests/sksl/errors/InterfaceBlockStorageModifiers.sksl",
  "$_tests/sksl/errors/InvalidAssignment.sksl",
  "$_tests/sksl/errors/InvalidUnary.sksl",
  "$_tests/sksl/errors/OpenArray.sksl",
  "$_tests/sksl/errors/ReturnDifferentType.sksl",
  "$_tests/sksl/errors/ReturnFromVoid.sksl",
  "$_tests/sksl/errors/ReturnMissingValue.sksl",
  "$_tests/sksl/errors/ReturnTypeMismatch.sksl",
  "$_tests/sksl/errors/SpuriousFloat.sksl",
  "$_tests/sksl/errors/StaticIfTest.sksl",
  "$_tests/sksl/errors/StaticSwitchConditionalBreak.sksl",
  "$_tests/sksl/errors/StaticSwitchTest.sksl",
  "$_tests/sksl/errors/SwitchDuplicateCase.sksl",
  "$_tests/sksl/errors/SwitchTypes.sksl",
  "$_tests/sksl/errors/SwizzleConstantOutput.sksl",
  "$_tests/sksl/errors/SwizzleDuplicateOutput.sksl",
  "$_tests/sksl/errors/SwizzleMatrix.sksl",
  "$_tests/sksl/errors/SwizzleOnlyLiterals.sksl",
  "$_tests/sksl/errors/SwizzleOutOfBounds.sksl",
  "$_tests/sksl/errors/SwizzleTooManyComponents.sksl",
  "$_tests/sksl/errors/TernaryMismatch.sksl",
  "$_tests/sksl/errors/UndefinedFunction.sksl",
  "$_tests/sksl/errors/UndefinedSymbol.sksl",
  "$_tests/sksl/errors/Unreachable.sksl",
  "$_tests/sksl/errors/UnsupportedGLSLIdentifiers.sksl",
  "$_tests/sksl/errors/UseWithoutInitializeArrayIndex.sksl",
  "$_tests/sksl/errors/UseWithoutInitializeBinaryExpr.sksl",
  "$_tests/sksl/errors/UseWithoutInitializeDeadIf.sksl",
  "$_tests/sksl/errors/UseWithoutInitializeDeadSwitch.sksl",
  "$_tests/sksl/errors/UseWithoutInitializeReturnValue.sksl",
  "$_tests/sksl/errors/UseWithoutInitializeVarDecl.sksl",
  "$_tests/sksl/errors/UsingInvalidValue.sksl",
  "$_tests/sksl/errors/WhileTypeMismatch.sksl",
  "$_tests/sksl/glsl/ArrayConstructors.sksl",
  "$_tests/sksl/glsl/ArrayIndexTypes.sksl",
  "$_tests/sksl/glsl/ArrayTypes.sksl",
  "$_tests/sksl/glsl/AssignmentTypeMatch.sksl",
  "$_tests/sksl/glsl/BoolFolding.sksl",
  "$_tests/sksl/glsl/Caps.sksl",
  "$_tests/sksl/glsl/CastsRoundTowardZero.sksl",
  "$_tests/sksl/glsl/ClipDistanceFragment.sksl",
  "$_tests/sksl/glsl/ClipDistanceVertex.vert",
  "$_tests/sksl/glsl/Clockwise.sksl",
  "$_tests/sksl/glsl/ComplexDelete.sksl",
  "$_tests/sksl/glsl/ConstArray.sksl",
  "$_tests/sksl/glsl/ConstVariableComparison.sksl",
  "$_tests/sksl/glsl/ConstantIf.sksl",
  "$_tests/sksl/glsl/Control.sksl",
  "$_tests/sksl/glsl/DeadDoWhileLoop.sksl",
  "$_tests/sksl/glsl/DeadLoopVariable.sksl",
  "$_tests/sksl/glsl/DependentInitializers.sksl",
  "$_tests/sksl/glsl/DerivativesUnused.sksl",
  "$_tests/sksl/glsl/Discard.sksl",
  "$_tests/sksl/glsl/FloatFolding.sksl",
  "$_tests/sksl/glsl/ForceHighPrecision.sksl",
  "$_tests/sksl/glsl/FrExp.sksl",
  "$_tests/sksl/glsl/FragCoordsFlipY.sksl",
  "$_tests/sksl/glsl/FragCoordsNew.sksl",
  "$_tests/sksl/glsl/FragCoordsOld.sksl",
  "$_tests/sksl/glsl/FunctionArgumentMatch.sksl",
  "$_tests/sksl/glsl/FunctionPrototype.sksl",
  "$_tests/sksl/glsl/Functions.sksl",
  "$_tests/sksl/glsl/Geometry.geom",
  "$_tests/sksl/glsl/GeometryExtension.geom",
  "$_tests/sksl/glsl/GeometryGSInvocations.geom",
  "$_tests/sksl/glsl/GeometryNoGSInvocations.geom",
  "$_tests/sksl/glsl/Height.sksl",
  "$_tests/sksl/glsl/HelloWorld.sksl",
  "$_tests/sksl/glsl/Hex.sksl",
  "$_tests/sksl/glsl/IncompleteShortIntPrecision.sksl",
  "$_tests/sksl/glsl/InstanceID.vert",
  "$_tests/sksl/glsl/IntFolding.sksl",
  "$_tests/sksl/glsl/InterfaceBlockAnonymous.sksl",
  "$_tests/sksl/glsl/InterfaceBlockArray.sksl",
  "$_tests/sksl/glsl/InterfaceBlockNamed.sksl",
  "$_tests/sksl/glsl/Matrices.sksl",
  "$_tests/sksl/glsl/MatrixFolding.sksl",
  "$_tests/sksl/glsl/ModifiersDeclaration.sksl",
  "$_tests/sksl/glsl/MultipleAssignments.sksl",
  "$_tests/sksl/glsl/NegatedVectorLiteral.sksl",
  "$_tests/sksl/glsl/NoFragCoordsPos.vert",
  "$_tests/sksl/glsl/NoFragCoordsPosRT.vert",
  "$_tests/sksl/glsl/NormalizationGeo.geom",
  "$_tests/sksl/glsl/NormalizationVert.vert",
  "$_tests/sksl/glsl/NumberConversions.sksl",
  "$_tests/sksl/glsl/Offset.sksl",
  "$_tests/sksl/glsl/Operators.sksl",
  "$_tests/sksl/glsl/RectangleTexture.sksl",
  "$_tests/sksl/glsl/ResizeMatrix.sksl",
  "$_tests/sksl/glsl/SampleMask.sksl",
  "$_tests/sksl/glsl/ScopedSymbol.sksl",
  "$_tests/sksl/glsl/ShortCircuitBoolFolding.sksl",
  "$_tests/sksl/glsl/ShortIntPrecision.sksl",
  "$_tests/sksl/glsl/StackingVectorCasts.sksl",
  "$_tests/sksl/glsl/StaticIf.sksl",
  "$_tests/sksl/glsl/StaticSwitch.sksl",
  "$_tests/sksl/glsl/StaticSwitchWithBreak.sksl",
  "$_tests/sksl/glsl/StaticSwitchWithBreakInsideBlock.sksl",
  "$_tests/sksl/glsl/StaticSwitchWithConditionalBreak.sksl",
  "$_tests/sksl/glsl/StaticSwitchWithConditionalBreakInsideBlock.sksl",
  "$_tests/sksl/glsl/StaticSwitchWithFallthroughA.sksl",
  "$_tests/sksl/glsl/StaticSwitchWithFallthroughB.sksl",
  "$_tests/sksl/glsl/StaticSwitchWithStaticConditionalBreak.sksl",
  "$_tests/sksl/glsl/StaticSwitchWithStaticConditionalBreakInsideBlock.sksl",
  "$_tests/sksl/glsl/Structs.sksl",
  "$_tests/sksl/glsl/Switch.sksl",
  "$_tests/sksl/glsl/SwitchContainingDeadCode.sksl",
  "$_tests/sksl/glsl/SwitchWithFallthrough.sksl",
  "$_tests/sksl/glsl/SwizzleConstants.sksl",
  "$_tests/sksl/glsl/SwizzleLTRB.sksl",
  "$_tests/sksl/glsl/SwizzleOpt.sksl",
  "$_tests/sksl/glsl/SwizzleScalar.sksl",
  "$_tests/sksl/glsl/TernaryAsLValueEntirelyFoldable.sksl",
  "$_tests/sksl/glsl/TernaryAsLValueFoldableTest.sksl",
  "$_tests/sksl/glsl/TernaryAsLValueUnfoldable.sksl",
  "$_tests/sksl/glsl/Texture.sksl",
  "$_tests/sksl/glsl/TextureSharpen.sksl",
  "$_tests/sksl/glsl/TextureSharpenVersion110.sksl",
  "$_tests/sksl/glsl/TextureVersion110.sksl",
  "$_tests/sksl/glsl/UnaryPositiveNegative.sksl",
  "$_tests/sksl/glsl/UnusedVariables.sksl",
  "$_tests/sksl/glsl/UsesPrecisionModifiers.sksl",
  "$_tests/sksl/glsl/VectorConstructors.sksl",
  "$_tests/sksl/glsl/VectorFolding.sksl",
  "$_tests/sksl/glsl/Version110.sksl",
  "$_tests/sksl/glsl/Version450Core.sksl",
  "$_tests/sksl/glsl/VertexID.vert",
  "$_tests/sksl/glsl/Width.sksl",
  "$_tests/sksl/inliner/DoWhileBodyMustBeInlinedIntoAScope.sksl",
  "$_tests/sksl/inliner/DoWhileTestCannotBeInlined.sksl",
  "$_tests/sksl/inliner/ForBodyMustBeInlinedIntoAScope.sksl",
  "$_tests/sksl/inliner/ForInitializerExpressionsCanBeInlined.sksl",
  "$_tests/sksl/inliner/ForWithReturnInsideCannotBeInlined.sksl",
  "$_tests/sksl/inliner/ForWithoutReturnInsideCanBeInlined.sksl",
  "$_tests/sksl/inliner/IfBodyMustBeInlinedIntoAScope.sksl",
  "$_tests/sksl/inliner/IfElseBodyMustBeInlinedIntoAScope.sksl",
  "$_tests/sksl/inliner/IfElseChainWithReturnsCanBeInlined.sksl",
  "$_tests/sksl/inliner/IfTestCanBeInlined.sksl",
  "$_tests/sksl/inliner/IfWithReturnsCanBeInlined.sksl",
  "$_tests/sksl/inliner/InlineKeywordOverridesThreshold.sksl",
  "$_tests/sksl/inliner/InlineThreshold.sksl",
  "$_tests/sksl/inliner/InlineWithInoutArgument.sksl",
  "$_tests/sksl/inliner/InlineWithModifiedArgument.sksl",
  "$_tests/sksl/inliner/InlineWithNestedBigCalls.sksl",
  "$_tests/sksl/inliner/InlineWithNestedCalls.sksl",
  "$_tests/sksl/inliner/InlineWithUnmodifiedArgument.sksl",
  "$_tests/sksl/inliner/InlineWithUnnecessaryBlocks.sksl",
  "$_tests/sksl/inliner/InlinerAvoidsVariableNameOverlap.sksl",
  "$_tests/sksl/inliner/InlinerManglesNames.sksl",
  "$_tests/sksl/inliner/ShortCircuitEvaluationsCannotInlineRightHandSide.sksl",
  "$_tests/sksl/inliner/SwitchWithCastCanBeInlined.sksl",
  "$_tests/sksl/inliner/SwitchWithReturnInsideCannotBeInlined.sksl",
  "$_tests/sksl/inliner/SwitchWithoutReturnInsideCanBeInlined.sksl",
  "$_tests/sksl/inliner/TernaryResultsCannotBeInlined.sksl",
  "$_tests/sksl/inliner/TernaryTestCanBeInlined.sksl",
  "$_tests/sksl/inliner/WhileBodyMustBeInlinedIntoAScope.sksl",
  "$_tests/sksl/inliner/WhileTestCannotBeInlined.sksl",
]

# Tests in sksl_glsl_settings_tests_sources will be compiled twice, once with --settings and once
# using --nosettings. In the latter mode, DefaultSettings is appended to the output filename.
sksl_glsl_settings_tests_sources = [
  "$_tests/sksl/glsl/Derivatives.sksl",
  "$_tests/sksl/glsl/DerivativesFlipY.sksl",
  "$_tests/sksl/glsl/TypePrecision.sksl",
  "$_tests/sksl/inliner/InlinerWrapsEarlyReturnsWithDoWhileBlock.sksl",
  "$_tests/sksl/workarounds/AbsInt.sksl",
  "$_tests/sksl/workarounds/FractNegative.sksl",
  "$_tests/sksl/workarounds/FragCoords.sksl",
  "$_tests/sksl/workarounds/LoopCondition.sksl",
  "$_tests/sksl/workarounds/MinAndAbsTogether.sksl",
  "$_tests/sksl/workarounds/NegatedAtan.sksl",
  "$_tests/sksl/workarounds/PowWithConstantExponent.sksl",
  "$_tests/sksl/workarounds/RewriteDoWhileLoops.sksl",
  "$_tests/sksl/workarounds/TernaryShortCircuit.sksl",
]
